#+TITLE: Quips

Things to sort, expand, or delete...

* The formal paradoxes of the early 20th century
I suspect that a common root of these was the use of /general logic/ as an
*organon*. In Kant's critical philosophy, he admonishes against this,
warning that will produce monstrous results.

To use logic as an organon is to use it to extend our knowledge. That is done
whenever we try to reason from purely general logical principles to *existence*
of any sort. This occurs, for instance, in the axiom of unrestricted
comprehension.
* We deserve to live well
Humanity as a whole does not seem to believe that it deserves to live well. We
must become convinced that we deserve to live well so that we become compelled
to form our communities to serve this end.
* Masquerading as kindness
Some forms of compliance and complicity masquerade as kindness.
* Wild guesses
- Girard's cite:girard11 culminates in a formal theory of /transcendental
  inter-subjectivity/.
* Atomic individuality
Atomic individuality and absolute independence are illusions born of the
misapplication of pure reason. An atomic individual with total independence is
not a possible object of cognition.

This fantasy (really a "nightmare of reason") can entertain lifestyle
anarchists, ancaps, and neoliberals only because they suppress the necessary
context in which humans must come into being.
* Efficiency
"Optimizing for efficiency" easily leads to optimizing for the maximum effect
attainable with minimum effort. In the absence of a proper critique of the value
of the expected effect, *this is deleterious*! In most cases, we should actually
be pursuing a course which rewards /greater effort/ with /improved outcomes/
even (and perhaps especially) when the efficiency ratio of effort to outcomes is
reduced.
* Pattern matching is in tension with representation independence
Pattern matching is lovely. I'd strongly encourage anyone who hasn't played with
a language supporting pattern matching to do so ASAP. As a matter of fact, skip
straight to unification. However, <something about tension with abstraction>.

The very premise of pattern matching is that the surface representation of a
structure can be used as an *iconic* interface to its components. <explain
iconic>.


Pattern matching lets us access arbitrarily nested components of data by
matching an instance of the data against a schematic form of it, with free
variables located at situations where we'd will find the components we want to
extract.

This places naive pattern matching in direct opposition to *representation
independence*.
* Nutshelled
** Virtual Machines vs. Containers
VMs use an abstraction of machine hardware to run real OSes on the host machine.
Containers use an abstractions of an operating systems to run programs in the
host operating system.


bibliography:../../bibliography/references.bib
